[
    {
        "id": 1699340564010,
        "trigger": 0,
        "priority": 0,
        "title": "APPS - Backup SH SCRIPT RUNNER script list",
        "description": "Backup your script list in SD card. Needs root.",
        "content": "# Backup script list\n# Backup your script list in SD card.\n# Needs root.\nSCRIPTS_FILE=\/data\/data\/com.adamioan.scriptrunner\/shared_prefs\/scripts.xml\nif [ ! -f \"$SCRIPTS_FILE\" ]; then SCRIPTS_FILE=\/data\/user\/0\/com.adamioan.scriptrunner\/shared_prefs\/scripts.xml; fi\nif [ ! -f \"$SCRIPTS_FILE\" ]; then\necho \"Cannot determine SH Script Runner scripts file. Exiting. $SCRIPTS_FILE\"\nexit 2\nfi\ncp \"$SCRIPTS_FILE\" \/sdcard\/sh_script_runner.bak\ncp \"$SCRIPTS_FILE\" \/storage\/emulated\/0\/sh_script_runner.bak",
        "as_root": true,
        "show_notification": false,
        "show_result": true,
        "result_in_file": false
    },
    {
        "id": 1699340564009,
        "trigger": 1,
        "priority": 0,
        "title": "APPS - Detach apps from Google Play",
        "description": "Detaches applications from Google Play Store, disabling updates. Needs root and wget binary.",
        "content": "# Detach apps from Google Play\n# Detaches applications from Google Play Store, disabling updates.\n# Needs root and wget binary.\nPACKAGES_TO_DETACH=$(cat <<-END\n'com.google.android.youtube', \n'com.sec.android.app.sbrowser', \n'com.google.android.inputmethod.latin', \n'' \nEND\n)\nWGET_BIN=\/system\/bin\/wget\nif [ ! -f \"$WGET_BIN\" ]; then WGET_BIN=\/system\/sbin\/wget; fi\nif [ ! -f \"$WGET_BIN\" ]; then WGET_BIN=\/system\/xbin\/wget; fi\nif [ ! -f \"$WGET_BIN\" ]; then\necho \"wget binary is missing\"\nexit 1\nfi\necho \"WGET binary found in $WGET_BIN\"\nAPP_FOLDER=\/data\/data\/com.adamioan.scriptrunner\/files\nif [ ! -d \"$APP_FOLDER\" ]; then APP_FOLDER=\/data\/user\/0\/com.adamioan.scriptrunner\/files; fi\nif [ ! -d \"$APP_FOLDER\" ]; then\necho \"Cannot determine SH Script Runner folder. Exiting. $APP_FOLDER\"\nexit 2\nfi\necho \"Application folder found $APP_FOLDER\"\nSQLITE_FILE=\"$APP_FOLDER\/sqlite\"\necho \"SQLITE binary path $SQLITE_FILE\"\nif [ ! -f \"$SQLITE_FILE\" ]; then\necho \"SQLITE binary does not exist. Downloading to $SQLITE_FILE...\"\n\"$WGET_BIN\" \"http:\/\/www.adamioannides.com\/sites\/com.adamioan.scriptrunner\/resources\/sqlite\" -q -O \"$SQLITE_FILE\" > \/dev\/null 2>&1\nif [ ! -f \"$SQLITE_FILE\" ]; then\necho \"SQLITE binary cannot be downloaded\"\nexit 3\nfi\nelse \necho \"SQLITE binary exists\"\nfi\necho \"Setting permissions...\"\nchmod 755 \"$SQLITE_FILE\"\necho \"Killing Play Store...\"\nam force-stop com.android.vending\necho \"Patching database...\"\nSTORE_DB_FILE=\/data\/data\/com.android.vending\/databases\/library.db\n\"$SQLITE_FILE\" \"$STORE_DB_FILE\" \"UPDATE ownership SET library_id = 'u-wl' WHERE doc_id IN ($PACKAGES_TO_DETACH)\"\necho \"Process completed\"",
        "as_root": true,
        "show_notification": true,
        "show_result": false,
        "show_toast": true,
        "result_in_file": false
    },
    {
        "id": 1699340564011,
        "trigger": 0,
        "priority": 0,
        "title": "APPS - Restore SH SCRIPT RUNNER script list",
        "description": "Restore your script list from SD card. Needs root.",
        "content": "# Restore script list\n# Restore your script list from SD card.\n# Needs root.\nOTHER_FILE=\/data\/data\/com.adamioan.scriptrunner\/shared_prefs\/WebViewChromiumPrefs.xml\nif [ ! -f \"$OTHER_FILE\" ]; then OTHER_FILE=\/data\/data\/com.adamioan.scriptrunner\/shared_prefs\/admob.xml; fi\nif [ ! -f \"$OTHER_FILE\" ]; then OTHER_FILE=\/data\/data\/com.adamioan.scriptrunner\/shared_prefs\/com.google.android.gms.measurement.prefs.xml; fi\nif [ ! -f \"$OTHER_FILE\" ]; then OTHER_FILE=\/data\/user\/0\/com.adamioan.scriptrunner\/shared_prefs\/WebViewChromiumPrefs.xml; fi\nif [ ! -f \"$OTHER_FILE\" ]; then OTHER_FILE=\/data\/user\/0\/com.adamioan.scriptrunner\/shared_prefs\/admob.xml; fi\nif [ ! -f \"$OTHER_FILE\" ]; then OTHER_FILE=\/data\/user\/0\/com.adamioan.scriptrunner\/shared_prefs\/com.google.android.gms.measurement.prefs.xml; fi\nif [ ! -f \"$OTHER_FILE\" ]; then\necho \"Cannot determine SH Script Runner shared preferences. Exiting. $OTHER_FILE\"\nexit 2\nfi\nSCRIPTS_DIR=${OTHER_FILE%\/*}\nSCRIPTS_FILE=\"${SCRIPTS_DIR}\/scripts.xml\"\nBACKUP_FILE=\/sdcard\/sh_script_runner.bak\nif [ ! -f \"$BACKUP_FILE\" ]; then BACKUP_FILE=\/storage\/emulated\/0\/sh_script_runner.bak; fi\nif [ ! -f \"$BACKUP_FILE\" ]; then\necho \"Cannot determine SH Script Runner backup file. Exiting. $BACKUP_FILE\"\nexit 2\nfi\nUSER_ID=$(stat -c '%u' \"$OTHER_FILE\")\ncp \"$BACKUP_FILE\" \"$SCRIPTS_FILE\"\nchown $USER_ID:$USER_ID \"$SCRIPTS_FILE\"\nam force-stop com.adamioan.scriptrunner\nam start -n \"com.adamioan.scriptrunner\/com.adamioan.scriptrunner.activities.MainActivity\" -a android.intent.action.MAIN -c android.intent.category.LAUNCHER",
        "as_root": true,
        "show_notification": false,
        "show_result": true,
        "result_in_file": false
    },
    {
        "id": 1699340564012,
        "trigger": 0,
        "priority": 0,
        "title": "APPS - Viber backup",
        "description": "Backup Viber databases to SD card. Needs root.",
        "content": "# Viber backup\n# Backup Viber databases to SD card.\n# Needs root.\nVIBER_DB_FOLDER=\/data\/data\/com.viber.voip\/databases\necho \"Checking $VIBER_DB_FOLDER existance\"\nif [ ! -d \"$VIBER_DB_FOLDER\" ]; then \necho \"$VIBER_DB_FOLDER does not exists\"\nVIBER_DB_FOLDER=\/data\/user\/0\/com.viber.voip\/databases\necho \"Checking $VIBER_DB_FOLDER existance\"\nfi\nif [ ! -d \"$VIBER_DB_FOLDER\" ]; then \necho \"$VIBER_DB_FOLDER does not exists\"\necho \"Exiting...\"\nexit -1\nfi\nVIBER_BACKUP=\/sdcard\/Viber_Backup\nif [ ! -d \"$VIBER_BACKUP\" ]; then \necho \"Creating SD backup directory $VIBER_BACKUP\"\nmkdir \"$VIBER_BACKUP\"\nfi\nFILE_COUNTER=0\nVIBER_DB_FILE=viber_data\nif [ -f \"$VIBER_DB_FOLDER\/$VIBER_DB_FILE\" ]; then \necho \"Copying file $VIBER_DB_FILE\"\ncp \"$VIBER_DB_FOLDER\/$VIBER_DB_FILE\" \"$VIBER_BACKUP\/$VIBER_DB_FILE\"\nFILE_COUNTER=$((FILE_COUNTER+1))\nfi\nVIBER_DB_FILE=viber_data-journal\nif [ -f \"$VIBER_DB_FOLDER\/$VIBER_DB_FILE\" ]; then \necho \"Copying file $VIBER_DB_FILE\"\ncp \"$VIBER_DB_FOLDER\/$VIBER_DB_FILE\" \"$VIBER_BACKUP\/$VIBER_DB_FILE\"\nFILE_COUNTER=$((FILE_COUNTER+1))\nfi\nVIBER_DB_FILE=viber_messages\nif [ -f \"$VIBER_DB_FOLDER\/$VIBER_DB_FILE\" ]; then \necho \"Copying file $VIBER_DB_FILE\"\ncp \"$VIBER_DB_FOLDER\/$VIBER_DB_FILE\" \"$VIBER_BACKUP\/$VIBER_DB_FILE\"\nFILE_COUNTER=$((FILE_COUNTER+1))\nfi\nVIBER_DB_FILE=viber_messages-journal\nif [ -f \"$VIBER_DB_FOLDER\/$VIBER_DB_FILE\" ]; then \necho \"Copying file $VIBER_DB_FILE\"\ncp \"$VIBER_DB_FOLDER\/$VIBER_DB_FILE\" \"$VIBER_BACKUP\/$VIBER_DB_FILE\"\nFILE_COUNTER=$((FILE_COUNTER+1))\nfi\nVIBER_DB_FILE=viber_prefs\nif [ -f \"$VIBER_DB_FOLDER\/$VIBER_DB_FILE\" ]; then \necho \"Copying file $VIBER_DB_FILE\"\ncp \"$VIBER_DB_FOLDER\/$VIBER_DB_FILE\" \"$VIBER_BACKUP\/$VIBER_DB_FILE\"\nFILE_COUNTER=$((FILE_COUNTER+1))\nfi\nVIBER_DB_FILE=viber_prefs-journal\nif [ -f \"$VIBER_DB_FOLDER\/$VIBER_DB_FILE\" ]; then \necho \"Copying file $VIBER_DB_FILE\"\ncp \"$VIBER_DB_FOLDER\/$VIBER_DB_FILE\" \"$VIBER_BACKUP\/$VIBER_DB_FILE\"\nFILE_COUNTER=$((FILE_COUNTER+1))\nfi\necho \"$FILE_COUNTER files copied\"\necho \"Backup completed\"",
        "as_root": true,
        "show_notification": false,
        "show_result": true,
        "result_in_file": false
    },
    {
        "id": 1699340564013,
        "trigger": 0,
        "priority": 0,
        "title": "APPS - Viber restore",
        "description": "Restore Viber databases from SD card. Needs root.",
        "content": "# Viber restore\n# Restore Viber databases from SD card.\n# Needs root.\nVIBER_BACKUP=\/sdcard\/Viber_Backup\nif [ ! -d \"$VIBER_BACKUP\" ]; then \necho \"Viber backup directory not found on SD card ($VIBER_BACKUP)\"\nexit -1\nfi\nVIBER_DB_FOLDER=\/data\/data\/com.viber.voip\/databases\necho \"Checking $VIBER_DB_FOLDER existance\"\nif [ ! -d \"$VIBER_DB_FOLDER\" ]; then \necho \"$VIBER_DB_FOLDER does not exists\"\nVIBER_DB_FOLDER=\/data\/user\/0\/com.viber.voip\/databases\necho \"Checking $VIBER_DB_FOLDER existance\"\nfi\nif [ ! -d \"$VIBER_DB_FOLDER\" ]; then \necho \"$VIBER_DB_FOLDER does not exists\"\nVIBER_DB_FOLDER=\/mnt\/expand\/d915468d-996f-4eb2-b4e6-0c190b6452f6\/user\/0\/com.viber.voip\/databases\necho \"Checking $VIBER_DB_FOLDER existance\"\nfi\nif [ ! -d \"$VIBER_DB_FOLDER\" ]; then \necho \"$VIBER_DB_FOLDER does not exists\"\necho \"Exiting...\"\nexit -1\nfi\necho \"Stopping Viber process\"\nam force-stop com.viber.voip\necho \"Copying files\"\ncp \"$VIBER_BACKUP\/*\" \"$VIBER_DB_FOLDER\/\"\necho \"Restore completed\"\necho \"Try to open Viber again\"",
        "as_root": true,
        "show_notification": false,
        "show_result": true,
        "result_in_file": false
    },
    {
        "id": 1699340564004,
        "trigger": 0,
        "priority": 0,
        "title": "BOOT - Reboot device",
        "description": "Reboots device.",
        "content": "# Reboot device\n# Reboots devices.\nsvc power reboot",
        "as_root": true,
        "show_notification": false,
        "show_result": true,
        "result_in_file": false
    },
    {
        "id": 1699340564003,
        "trigger": 0,
        "priority": 0,
        "title": "BOOT - Reboot in recovery",
        "description": "Reboots device in recovery mode.",
        "content": "# Reboot in recovery mode\n# Reboots device in recovery mode.\nsvc power reboot recovery",
        "as_root": true,
        "show_notification": false,
        "show_result": true,
        "result_in_file": false
    },
    {
        "id": 1699340564005,
        "trigger": 0,
        "priority": 0,
        "title": "DEVELOPMENT - Enable USB debugging",
        "description": "Enables USB debugging mode and allows wired connection through PC. Needs root.",
        "content": "# Enable USB debugging\n# Enables USB debugging mode and allows wired connection through PC. \n# Needs root.\nsettings put global development_settings_enabled 1\nsettings put global adb_enabled 1\necho \"mtp,adb\" > \/data\/property\/persist.sys.usb.config\nsetprop persist.service.adb.enable 1\nstop adbd\nstart adbd\necho USB debugging enabled",
        "as_root": true,
        "show_notification": false,
        "show_result": true,
        "result_in_file": false
    },
    {
        "id": 1699340564006,
        "trigger": 0,
        "priority": 0,
        "title": "DEVELOPMENT - Enable network USB debugging",
        "description": "Enables USB debugging mode and allows remote connection through PC. Replace default port (5555) if needed. Needs root.",
        "content": "# Enable USB debugging\n# Enables USB debugging mode and allows wired connection through PC. \n# Replace default port (5555) if needed.\n# Needs root.\nsettings put global development_settings_enabled 1\nsettings put global adb_enabled 1\necho \"mtp,adb\" > \/data\/property\/persist.sys.usb.config\nsetprop persist.service.adb.enable 1\nsetprop service.adb.tcp.port 5555\nstop adbd\nstart adbd\necho USB debugging enabled\necho Network intefaces\nifconfig | grep \"inet addr:\"",
        "as_root": true,
        "show_notification": false,
        "show_result": true,
        "result_in_file": false
    },
    {
        "id": 1699340564000,
        "trigger": 1,
        "priority": 0,
        "title": "STORAGE - Clear cache",
        "description": "Clears all cache directories from internal storage and protected sdcard storage. Needs root.",
        "content": "# Clear cache\n# Clears all cache directories from internal storage and protected sdcard storage. \n# Needs root.\nrm -rf \/sdcard\/.thumbnails\nfind \/data\/data\/ -type d -name \"cache\" -exec rm -rf \"{}\" \\; \nfind \/data\/user\/ -type d -name \"cache\" -exec rm -rf \"{}\" \\; \nfind \/sdcard\/Android\/ -type d -name \"cache\" -exec rm -rf \"{}\" \\; ",
        "as_root": true,
        "show_notification": true,
        "show_result": false,
        "result_in_file": false
    },
    {
        "id": 1699340564002,
        "trigger": 0,
        "priority": 0,
        "title": "STORAGE - Clear cache and temp files",
        "description": "Clears all cache directories and files with tmp, temp and cache extension. Needs root.",
        "content": "# Clear temp files\n# Clears all files with tmp, temp and cache extension. Needs root.\n# Needs root.\nrm -rf \/sdcard\/.thumbnails\nfind \/data\/data\/ -type d -name \"cache\" -exec rm -rf \"{}\" \\; \nfind \/data\/user\/ -type d -name \"cache\" -exec rm -rf \"{}\" \\; \nfind \/sdcard\/Android\/ -type d -name \"cache\" -exec rm -rf \"{}\" \\; \nfind \/storage\/emulated\/0\/Android\/ -type d -name \"cache\" -exec rm -rf \"{}\" \\; \nfind \/data\/data\/ -type f -name \".tmp\" -delete \nfind \/data\/data\/ -type f -name \".temp\" -delete \nfind \/data\/data\/ -type f -name \".cache\" -delete \nfind \/data\/user\/ -type f -name \".tmp\" -delete \nfind \/data\/user\/ -type f -name \".temp\" -delete \nfind \/data\/user\/ -type f -name \".cache\" -delete \nfind \/sdcard\/ -type f -name \".tmp\" -delete \nfind \/sdcard\/ -type f -name \".temp\" -delete \nfind \/sdcard\/ -type f -name \".cache\" -delete \nfind \/storage\/emulated\/0\/ -type f -name \".tmp\" -delete \nfind \/storage\/emulated\/0\/ -type f -name \".temp\" -delete \nfind \/storage\/emulated\/0\/ -type f -name \".cache\" -delete ",
        "as_root": true,
        "show_notification": true,
        "show_result": true,
        "result_in_file": false
    },
    {
        "id": 1699340564001,
        "trigger": 0,
        "priority": 0,
        "title": "STORAGE - Clear temp files",
        "description": "Clears all files with tmp, temp and cache extension. Needs root.",
        "content": "# Clear temp files\n# Clears all files with tmp, temp and cache extension. Needs root.\n# Needs root.\nfind \/data\/data\/ -type f -name \".tmp\" -delete \nfind \/data\/data\/ -type f -name \".temp\" -delete \nfind \/data\/data\/ -type f -name \".cache\" -delete \nfind \/data\/user\/ -type f -name \".tmp\" -delete \nfind \/data\/user\/ -type f -name \".temp\" -delete \nfind \/data\/user\/ -type f -name \".cache\" -delete \nfind \/sdcard\/ -type f -name \".tmp\" -delete \nfind \/sdcard\/ -type f -name \".temp\" -delete \nfind \/sdcard\/ -type f -name \".cache\" -delete ",
        "as_root": true,
        "show_notification": true,
        "show_result": true,
        "result_in_file": false
    },
    {
        "id": 1699340564008,
        "trigger": 0,
        "priority": 0,
        "title": "STORAGE - Enable MTP",
        "description": "Enables Media transfer Protocol connection. Needs root.",
        "content": "# Enable MTP\n# Enables Media transfer Protocol connection. \n# Needs root.\nsvc usb setFunctions mtp\nsvc usb setFunctions mtp true",
        "as_root": true,
        "show_notification": false,
        "show_result": true,
        "result_in_file": false
    },
    {
        "id": 1699340564007,
        "trigger": 0,
        "priority": 0,
        "title": "USER - Remove guest account",
        "description": "Removes guest account from the device. Needs root.",
        "content": "# Remove guest account\n# Removes guest account from the device. \n# Needs root.\nsettings put global guest_user_enabled 0\necho Guest account removed. Navigate to Settings - Users and click Guest. ",
        "as_root": true,
        "show_notification": false,
        "show_result": true,
        "result_in_file": false
    }
]